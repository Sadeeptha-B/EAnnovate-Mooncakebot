[
    {
        "id": "023d3c161439f2e9",
        "type": "subflow",
        "name": "Deactivate Device",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "dafb536a12a69b14"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 80,
                "wires": [
                    {
                        "id": "0914b931de1a3157",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DELAY",
                "type": "str",
                "value": "1"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0914b931de1a3157",
        "type": "change",
        "z": "023d3c161439f2e9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "dafb536a12a69b14",
        "type": "delay",
        "z": "023d3c161439f2e9",
        "name": "",
        "pauseType": "delay",
        "timeout": "${DELAY}",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "0914b931de1a3157"
            ]
        ]
    },
    {
        "id": "50f6fbc320dea49b",
        "type": "tab",
        "label": "Factory flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cfaea44f96a90458",
        "type": "group",
        "z": "50f6fbc320dea49b",
        "name": "Initialize variables on Factory I/O",
        "style": {
            "label": true
        },
        "nodes": [
            "682355ac9bc88396",
            "8c4910aea04fecc8",
            "8a3a5a0187a20265",
            "e9441ca61d396185",
            "f82142b89b105ba3",
            "2d4c3ac558366bce",
            "9b068dd6e91fda26",
            "90187d075165feed",
            "e87e9d5333ca74c6",
            "5a2bb80bda59d524",
            "7e0e5fe4f65b0162",
            "f799e9d402c11619",
            "eb94a771b004d105",
            "decd9fb025361f13",
            "b6792239f04bfde4",
            "537c4b3198fab4c7",
            "180c0fde980bafd8",
            "8a3d21f15207e729",
            "482dac863765cfcc"
        ],
        "x": 194,
        "y": 779,
        "w": 852,
        "h": 1042
    },
    {
        "id": "e9cf96557e4dc034",
        "type": "group",
        "z": "50f6fbc320dea49b",
        "name": "Order Dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "9666904b6dc0d5e6",
            "a5ba93aa8bc00072",
            "29b1f214ec288ce2",
            "c5561c88f0c91805",
            "a59f091c6b5b8eef",
            "1850e85d2d9f86f9",
            "191afd8b426a5953",
            "5ce6df22c9910926",
            "a3a88abf52b9226d",
            "23082030b9411860",
            "cec93aa66d8c521a",
            "c3906bba9a8796fa",
            "94c5394832133fc2",
            "d9acf19651088861"
        ],
        "x": 1294,
        "y": 959,
        "w": 1312,
        "h": 482
    },
    {
        "id": "ea4ca3fed76ae949",
        "type": "group",
        "z": "50f6fbc320dea49b",
        "name": "Control Panel and Database connection",
        "style": {
            "label": true
        },
        "nodes": [
            "c7940d8784d7bbe8",
            "edad8c679e19ae60",
            "08c2b476e9f11f2c",
            "120fc7a8b2fc4584",
            "1a8b8e7c0d66857a",
            "163bb85765e9aa09",
            "0195a910bc91cb04",
            "5e84795dac32ec63",
            "68eeaa4a891c7350",
            "d7e5f1b70adaebd9",
            "362827f4b7c7a8b5",
            "9d77f75895e9fea8",
            "09b9111ff95375dd",
            "dfc5a2f190d5f059",
            "5c38255a69294198",
            "cf545a4f7c618db1"
        ],
        "x": 14,
        "y": 219,
        "w": 1372,
        "h": 442
    },
    {
        "id": "682355ac9bc88396",
        "type": "OpcUa-Server",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "port": "53880",
        "name": "",
        "endpoint": "",
        "users": "users.json",
        "nodesetDir": "",
        "folderName4PKI": "",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": false,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "maxConnectionsPerEndpoint": "60",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "x": 940,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "8c4910aea04fecc8",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_sensor0;datatype=Boolean",
        "datatype": "Boolean",
        "value": "0",
        "name": "_sensor0",
        "x": 580,
        "y": 820,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "8a3a5a0187a20265",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_sensor1;datatype=Boolean",
        "datatype": "Boolean",
        "value": "0",
        "name": "_sensor1",
        "x": 580,
        "y": 900,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "e9441ca61d396185",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_sensor2;datatype=Boolean",
        "datatype": "Boolean",
        "value": "0",
        "name": "_sensor2",
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "f82142b89b105ba3",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_conveyor0;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor0",
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "2d4c3ac558366bce",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_conveyor1;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor1",
        "x": 590,
        "y": 1140,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "9b068dd6e91fda26",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_conveyor2;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor2",
        "x": 590,
        "y": 1200,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "90187d075165feed",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_conveyor3a;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor3a",
        "x": 590,
        "y": 1260,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "e87e9d5333ca74c6",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_conveyor3b;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor3b",
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "5a2bb80bda59d524",
        "type": "inject",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"opcuaCommand\":\"addVariable\"}",
        "payloadType": "json",
        "x": 290,
        "y": 1240,
        "wires": [
            [
                "8c4910aea04fecc8",
                "8a3a5a0187a20265",
                "e9441ca61d396185",
                "f82142b89b105ba3",
                "2d4c3ac558366bce",
                "9b068dd6e91fda26",
                "90187d075165feed",
                "e87e9d5333ca74c6",
                "7e0e5fe4f65b0162",
                "f799e9d402c11619",
                "eb94a771b004d105",
                "decd9fb025361f13",
                "b6792239f04bfde4",
                "537c4b3198fab4c7",
                "180c0fde980bafd8",
                "8a3d21f15207e729"
            ]
        ]
    },
    {
        "id": "337d458bd8613c5a",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Specify current sensor",
        "func": "let sensor_no = flow.get(\"sensor_no\")\n\nmsg.topic = \"ns=2;s=_sensor\"+ sensor_no +\";datatype=Boolean\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 420,
        "wires": [
            [
                "be0d45040b95f2ae"
            ]
        ]
    },
    {
        "id": "be0d45040b95f2ae",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2280,
        "y": 420,
        "wires": [
            [
                "049a58e18d900ad0"
            ]
        ]
    },
    {
        "id": "049a58e18d900ad0",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Track order status",
        "func": "let sensor_no = flow.get(\"sensor_no\")\nlet order_no = flow.get(\"orders\")\nlet complete_orders = flow.get(\"completed_orders\")\nlet prevSenReading = flow.get(\"previousSensorReading\")\nmsg.completeFlavor = \"false\";\nmsg.completeOrder = \"false\";\n\nif(msg.payload & !prevSenReading){\n    prevSenReading = true\n    complete_orders[sensor_no] += 1\n    flow.set(\"completed_orders\", complete_orders)\n} else{\n    prevSenReading = false\n}\n\nif(complete_orders[sensor_no] >= order_no[sensor_no]){\n        // Turn on conveyor here\n        msg.emit = \"false\"\n        sensor_no += 1\n        if(sensor_no >= order_no.length){\n            msg.completeOrder = \"true\";\n        }\n        flow.set(\"sensor_no\", sensor_no)\n        msg.completeFlavor = \"true\"\n}\nflow.set(\"previousSensorReading\", prevSenReading)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 420,
        "wires": [
            [
                "262364abb2b4947e",
                "6a5a152feed870a2",
                "cc1529202d8ee3be",
                "653bc09719c75908"
            ]
        ]
    },
    {
        "id": "19da82eed8cb5c0a",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3560,
        "y": 420,
        "wires": [
            [
                "0888304c6f85ced3"
            ]
        ]
    },
    {
        "id": "7e0e5fe4f65b0162",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_Emitter0;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter0",
        "x": 580,
        "y": 1420,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "f799e9d402c11619",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_Emitter1;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter1",
        "x": 580,
        "y": 1480,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "eb94a771b004d105",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_Emitter2;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter2",
        "x": 580,
        "y": 1540,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "0f5dfae776165a61",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3980,
        "y": 420,
        "wires": [
            [
                "8aa33ee3117a0857"
            ]
        ]
    },
    {
        "id": "262364abb2b4947e",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "name": "Check if a flavor is complete",
        "property": "completeFlavor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2800,
        "y": 420,
        "wires": [
            [
                "27a478cab0e2a5f3",
                "fa2abe40a593d651"
            ]
        ]
    },
    {
        "id": "3459c41fb2b21d27",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Start conveyor belt:3a",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor3a;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3320,
        "y": 420,
        "wires": [
            [
                "19da82eed8cb5c0a"
            ]
        ]
    },
    {
        "id": "27a478cab0e2a5f3",
        "type": "delay",
        "z": "50f6fbc320dea49b",
        "name": "Await delivery of box",
        "pauseType": "delay",
        "timeout": "1.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3080,
        "y": 420,
        "wires": [
            [
                "3459c41fb2b21d27"
            ]
        ]
    },
    {
        "id": "8a99b791c7e9a6ed",
        "type": "trigger",
        "z": "50f6fbc320dea49b",
        "name": "Polling loop",
        "op1": "",
        "op2": "",
        "op1type": "date",
        "op2type": "date",
        "duration": "-600",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1850,
        "y": 420,
        "wires": [
            [
                "337d458bd8613c5a",
                "4a7eb024243e8707"
            ]
        ]
    },
    {
        "id": "6a5a152feed870a2",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "name": "Check if order is complete",
        "property": "completeOrder",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2790,
        "y": 480,
        "wires": [
            [
                "288b5c0ad74e2f53"
            ]
        ]
    },
    {
        "id": "be8269e2544d6f6d",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Start second conveyor belt:3b",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor3b;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3290,
        "y": 480,
        "wires": [
            [
                "f7c61fdcb68bfc15"
            ]
        ]
    },
    {
        "id": "288b5c0ad74e2f53",
        "type": "delay",
        "z": "50f6fbc320dea49b",
        "name": "Await delivery of box",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3040,
        "y": 480,
        "wires": [
            [
                "be8269e2544d6f6d"
            ]
        ]
    },
    {
        "id": "f7c61fdcb68bfc15",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3560,
        "y": 480,
        "wires": [
            [
                "c6748c867f5a607e"
            ]
        ]
    },
    {
        "id": "b318d938192a9266",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 4100,
        "y": 480,
        "wires": [
            [
                "4e9df0bd797199cd",
                "9981caba16606c21"
            ]
        ]
    },
    {
        "id": "fa2abe40a593d651",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Reset polling loop",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 200,
        "wires": [
            [
                "8a99b791c7e9a6ed"
            ]
        ]
    },
    {
        "id": "8aa33ee3117a0857",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Restarts polling loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 60,
        "wires": [
            [
                "8a99b791c7e9a6ed"
            ]
        ]
    },
    {
        "id": "1f42af49ad9e98ca",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Initialize Variables",
        "func": "flow.set(\"sensor_no\",0)\nflow.set(\"completed_orders\", [0,0,0])\nflow.set(\"previousSensorReading\", false)\n\nmsg.payload = flow.get(\"completed_orders\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 420,
        "wires": [
            [
                "8a99b791c7e9a6ed"
            ]
        ]
    },
    {
        "id": "cc1529202d8ee3be",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "name": "Check if all sensors polled",
        "property": "sensor_no",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2790,
        "y": 360,
        "wires": [
            [
                "fa2abe40a593d651"
            ]
        ]
    },
    {
        "id": "decd9fb025361f13",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_Emitter3;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter3",
        "x": 580,
        "y": 1600,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "efb2902c684044fb",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Start conveyor belt: 3a",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor3a;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 580,
        "wires": [
            [
                "633cb6faefc7715d"
            ]
        ]
    },
    {
        "id": "633cb6faefc7715d",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1880,
        "y": 580,
        "wires": [
            [
                "24afb6b52c392d21"
            ]
        ]
    },
    {
        "id": "19f367060b4b003d",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2500,
        "y": 580,
        "wires": [
            [
                "1f42af49ad9e98ca"
            ]
        ]
    },
    {
        "id": "1902d4ddd419bcc6",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Emit new stackable box",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_Emitter3;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 660,
        "wires": [
            [
                "955853a3ca9d07a6"
            ]
        ]
    },
    {
        "id": "955853a3ca9d07a6",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1900,
        "y": 660,
        "wires": [
            [
                "85830c09d999e69c"
            ]
        ]
    },
    {
        "id": "96806e48bb35917c",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2480,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "85830c09d999e69c",
        "type": "subflow:023d3c161439f2e9",
        "z": "50f6fbc320dea49b",
        "name": "Stop emitting stackable boxes",
        "x": 2170,
        "y": 660,
        "wires": [
            [
                "96806e48bb35917c"
            ]
        ]
    },
    {
        "id": "24afb6b52c392d21",
        "type": "subflow:023d3c161439f2e9",
        "z": "50f6fbc320dea49b",
        "name": "Let box move and stop conveyor belt:3a",
        "env": [
            {
                "name": "DELAY",
                "value": "3",
                "type": "str"
            }
        ],
        "x": 2200,
        "y": 580,
        "wires": [
            [
                "19f367060b4b003d"
            ]
        ]
    },
    {
        "id": "c6748c867f5a607e",
        "type": "subflow:023d3c161439f2e9",
        "z": "50f6fbc320dea49b",
        "name": "Stop second conveyor belt after wait:3b",
        "env": [
            {
                "name": "DELAY",
                "value": "3",
                "type": "str"
            }
        ],
        "x": 3840,
        "y": 480,
        "wires": [
            [
                "b318d938192a9266"
            ]
        ]
    },
    {
        "id": "0888304c6f85ced3",
        "type": "subflow:023d3c161439f2e9",
        "z": "50f6fbc320dea49b",
        "name": "Stop conveyor belt:3a",
        "env": [
            {
                "name": "DELAY",
                "value": "3.9",
                "type": "str"
            }
        ],
        "x": 3760,
        "y": 420,
        "wires": [
            [
                "0f5dfae776165a61"
            ]
        ]
    },
    {
        "id": "651961b6a01f37ae",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Turn off Emitter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3520,
        "y": 200,
        "wires": [
            [
                "8f0f9a090961f83e"
            ]
        ]
    },
    {
        "id": "8f0f9a090961f83e",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3700,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3c79ac1d841ec829",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "name": "Is emitting complete?",
        "property": "emit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3300,
        "y": 200,
        "wires": [
            [
                "651961b6a01f37ae",
                "0573fb9cd7502247"
            ]
        ]
    },
    {
        "id": "e8a767d21d2e7c01",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3160,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d4520b577ac63520",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "name": "Check if emitting is needed",
        "property": "emit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2580,
        "y": 100,
        "wires": [
            [
                "ebeceb5658f4fbed",
                "e46fa7de32735ff0"
            ]
        ]
    },
    {
        "id": "4a7eb024243e8707",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Track emission",
        "func": "let orders = flow.get(\"orders\")\nlet completed_orders = flow.get(\"completed_orders\")\nlet sensor_no = flow.get(\"sensor_no\")\nmsg.topic = \"ns=2;s=_Emitter\"+sensor_no+\";datatype=Boolean\"\nif(completed_orders[sensor_no] < orders[sensor_no]){\n    msg.emit = \"true\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 100,
        "wires": [
            [
                "d4520b577ac63520"
            ]
        ]
    },
    {
        "id": "653bc09719c75908",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Get current emitter",
        "func": "let sensor_no = flow.get(\"sensor_no\") - 1\n\nmsg.topic = \"ns=2;s=_Emitter\"+sensor_no+\";datatype=Boolean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3070,
        "y": 200,
        "wires": [
            [
                "3c79ac1d841ec829"
            ]
        ]
    },
    {
        "id": "ebeceb5658f4fbed",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Turn on Emitter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 60,
        "wires": [
            [
                "e8a767d21d2e7c01"
            ]
        ]
    },
    {
        "id": "c7940d8784d7bbe8",
        "type": "ui_button",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Start Button",
        "group": "917a6a0ec30b9da8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "edad8c679e19ae60"
            ]
        ]
    },
    {
        "id": "edad8c679e19ae60",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Query pending orders",
        "func": "msg.topic=`SELECT m.order_id, item_name, quantity FROM \n            MENU_ORDER m INNER JOIN ORDER_ITEM i ON m.order_id = i.order_id\n            WHERE order_status=\"Order successful\" ORDER BY m.date`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 460,
        "wires": [
            [
                "08c2b476e9f11f2c"
            ]
        ]
    },
    {
        "id": "08c2b476e9f11f2c",
        "type": "sqlite",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "mydb": "9e381f49380c717d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 660,
        "y": 460,
        "wires": [
            [
                "120fc7a8b2fc4584"
            ]
        ]
    },
    {
        "id": "120fc7a8b2fc4584",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Identify current order",
        "func": "const groupByKey = (list, key) => list.reduce((hash, obj) => ({...hash, [obj[key]]:( hash[obj[key]] || [] ).concat(obj)}), {})\n\nconst results = groupByKey(msg.payload, 'order_id'),\n      keys = Object.keys(results)\n      \nmsg.order_made = \"true\"\n\nif (keys.length === 0){\n    msg.order_made = \"false\"\n    msg.payload=\"No orders remaining\"\n    return msg;\n}\n   \nconst order_id = keys[0],\n      current_order = results[keys[0]]\n        \nlet item, quantity;\nlet order_array = [0,0,0]\n\nfor (let i=0; i<current_order.length; i++){\n    item = current_order[i].item_name,\n    quantity = current_order[i].quantity\n    setOrder(item, quantity)\n}\nflow.set(\"orders\", order_array)\n\n\nfunction setOrder(itemName, quantity){\n    let index;\n    if (itemName === \"WhiteLotus\"){\n        index = 0\n    } else if (itemName === \"RedBean\"){\n        index = 1\n    } else if (itemName === \"GreenTea\"){\n        index = 2\n    } else {\n        throw new Error(\"Unrecognized order\")\n    }\n    order_array[index] = Math.ceil(quantity/5)\n}\n\nmsg.topic = `UPDATE MENU_ORDER SET order_status=\"Making mooncakes\"\n             WHERE order_id=${order_id}`\nmsg.payload = \"Making mooncakes\"\nflow.set(\"order_id\", order_id)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 460,
        "wires": [
            [
                "68eeaa4a891c7350",
                "163bb85765e9aa09"
            ]
        ]
    },
    {
        "id": "1a8b8e7c0d66857a",
        "type": "ui_button",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Stop Button",
        "group": "917a6a0ec30b9da8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "5e84795dac32ec63"
            ]
        ]
    },
    {
        "id": "163bb85765e9aa09",
        "type": "ui_text",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "group": "917a6a0ec30b9da8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status indicator",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 560,
        "wires": []
    },
    {
        "id": "0195a910bc91cb04",
        "type": "complete",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Trigger if an order is complete",
        "scope": [
            "4e9df0bd797199cd"
        ],
        "uncaught": false,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "cf545a4f7c618db1"
            ]
        ]
    },
    {
        "id": "5e84795dac32ec63",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Reset state",
        "func": "msg.invalid_reset = \"false\"\n\nlet order_id = flow.get(\"order_id\")\nif (order_id === undefined){\n    msg.invalid_reset = \"true\"\n    msg.payload = \"\"\n    return msg;\n} \n\nmsg.payload = \"Order paused\"\nflow.set(\"orders\", [0,0,0])\n\nmsg.topic = `UPDATE MENU_ORDER SET order_status=\"Order successful\"\n             WHERE order_id=${order_id}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 560,
        "wires": [
            [
                "163bb85765e9aa09",
                "9d77f75895e9fea8"
            ]
        ]
    },
    {
        "id": "9666904b6dc0d5e6",
        "type": "ui_numeric",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "White Lotus Picker",
        "label": "White Lotus ",
        "tooltip": "",
        "group": "229fdb851d9f2429",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 2190,
        "y": 1060,
        "wires": [
            [
                "c5561c88f0c91805"
            ]
        ]
    },
    {
        "id": "a5ba93aa8bc00072",
        "type": "ui_numeric",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Red Bean Picker",
        "label": "Red Bean",
        "tooltip": "",
        "group": "229fdb851d9f2429",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 2190,
        "y": 1120,
        "wires": [
            [
                "a59f091c6b5b8eef"
            ]
        ]
    },
    {
        "id": "29b1f214ec288ce2",
        "type": "ui_numeric",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Green Tea Picker",
        "label": "Green Tea",
        "tooltip": "",
        "group": "229fdb851d9f2429",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 2190,
        "y": 1180,
        "wires": [
            [
                "1850e85d2d9f86f9"
            ]
        ]
    },
    {
        "id": "c5561c88f0c91805",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Set White Lotus Amount",
        "func": "let orders = flow.get(\"orders\")\nif(orders === undefined){\n    orders = [0,0,0]\n}\n\norders[0] = msg.payload\nflow.set(\"orders\", orders)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "a59f091c6b5b8eef",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Set Red Bean Amount",
        "func": "let orders = flow.get(\"orders\")\nif(orders === undefined){\n    orders = [0,0,0]\n}\norders[1] = msg.payload\nflow.set(\"orders\", orders)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "1850e85d2d9f86f9",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Set Green Tea Amount",
        "func": "let orders = flow.get(\"orders\")\nif(orders === undefined){\n    orders = [0,0,0]\n}\norders[2] = msg.payload\nflow.set(\"orders\", orders)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "191afd8b426a5953",
        "type": "ui_button",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "",
        "group": "229fdb851d9f2429",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1380,
        "y": 1000,
        "wires": [
            [
                "5ce6df22c9910926",
                "c3906bba9a8796fa",
                "efb2902c684044fb",
                "1902d4ddd419bcc6",
                "0dc1dac0a4e819a5"
            ]
        ]
    },
    {
        "id": "5ce6df22c9910926",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Disable input upon accepting order",
        "func": "msg.enabled = false;\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1000,
        "wires": [
            [
                "9666904b6dc0d5e6",
                "a5ba93aa8bc00072",
                "29b1f214ec288ce2",
                "191afd8b426a5953"
            ]
        ]
    },
    {
        "id": "a3a88abf52b9226d",
        "type": "ui_button",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "",
        "group": "229fdb851d9f2429",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1370,
        "y": 1340,
        "wires": [
            [
                "23082030b9411860",
                "94c5394832133fc2"
            ]
        ]
    },
    {
        "id": "23082030b9411860",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Enable input upon reset",
        "func": "msg.enabled = true;\nmsg.payload = \"\"\nflow.set(\"orders\",[0,0,0]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1340,
        "wires": [
            [
                "a5ba93aa8bc00072",
                "9666904b6dc0d5e6",
                "29b1f214ec288ce2",
                "191afd8b426a5953"
            ]
        ]
    },
    {
        "id": "cec93aa66d8c521a",
        "type": "ui_text",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "group": "229fdb851d9f2429",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Status Indicator",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2180,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c3906bba9a8796fa",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Notify Order success",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Order is successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 1080,
        "wires": [
            [
                "cec93aa66d8c521a"
            ]
        ]
    },
    {
        "id": "94c5394832133fc2",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 1400,
        "wires": [
            [
                "cec93aa66d8c521a"
            ]
        ]
    },
    {
        "id": "68eeaa4a891c7350",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Proceed only if there are orders",
        "property": "order_made",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1230,
        "y": 460,
        "wires": [
            [
                "efb2902c684044fb",
                "1902d4ddd419bcc6",
                "0dc1dac0a4e819a5",
                "d7e5f1b70adaebd9"
            ]
        ]
    },
    {
        "id": "d7e5f1b70adaebd9",
        "type": "sqlite",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "mydb": "9e381f49380c717d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1220,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "362827f4b7c7a8b5",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Notify database of completion",
        "func": "let order_id = flow.get(\"order_id\")\n\nif (order_id === undefined){\n    msg.error = \"order_id not set\"\n    return msg;\n}\n\nmsg.topic = `UPDATE MENU_ORDER SET order_status=\"Order completed\"\n             WHERE order_id=${order_id}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 360,
        "wires": [
            [
                "d7e5f1b70adaebd9"
            ]
        ]
    },
    {
        "id": "9d77f75895e9fea8",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Check if stop was valid",
        "property": "invalid_reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 800,
        "y": 620,
        "wires": [
            [
                "09b9111ff95375dd"
            ]
        ]
    },
    {
        "id": "09b9111ff95375dd",
        "type": "sqlite",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "mydb": "9e381f49380c717d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1160,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "4e9df0bd797199cd",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Buffer node",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4330,
        "y": 480,
        "wires": [
            [
                "fa2abe40a593d651"
            ]
        ]
    },
    {
        "id": "dfc5a2f190d5f059",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Check if order has been stopped",
        "func": "const orders = flow.get(\"orders\")\n\nmsg.stopped=\"false\"\nif (orders.toString() === [0,0,0].toString()){\n    msg.stopped = \"true\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 360,
        "wires": [
            [
                "5c38255a69294198"
            ]
        ]
    },
    {
        "id": "5c38255a69294198",
        "type": "switch",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "Proceed only if not stopped",
        "property": "stopped",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "edad8c679e19ae60",
                "362827f4b7c7a8b5"
            ]
        ]
    },
    {
        "id": "b6792239f04bfde4",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_start_btn;datatype=Boolean",
        "datatype": "Boolean",
        "value": "",
        "name": "_start_btn",
        "x": 580,
        "y": 1720,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "537c4b3198fab4c7",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_stop_btn;datatype=Boolean",
        "datatype": "Boolean",
        "value": "",
        "name": "_stop_btn",
        "x": 580,
        "y": 1780,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "cf545a4f7c618db1",
        "type": "delay",
        "z": "50f6fbc320dea49b",
        "g": "ea4ca3fed76ae949",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 260,
        "wires": [
            [
                "dfc5a2f190d5f059"
            ]
        ]
    },
    {
        "id": "25e52b64bd30bec6",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3360,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d79bbb684caeee89",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Turn on Conveyor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 120,
        "wires": [
            [
                "25e52b64bd30bec6"
            ]
        ]
    },
    {
        "id": "e46fa7de32735ff0",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Conveyor Belt",
        "func": "let sensor_no = flow.get(\"sensor_no\")\n\nmsg.topic = \"ns=2;s=_conveyor\"+sensor_no+\";datatype=Boolean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 120,
        "wires": [
            [
                "d79bbb684caeee89"
            ]
        ]
    },
    {
        "id": "a12d8400d795190a",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 4160,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e47c3a2480ce57ac",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Turn off Conveyor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 260,
        "wires": [
            [
                "9f155d12ee5daad4"
            ]
        ]
    },
    {
        "id": "0573fb9cd7502247",
        "type": "function",
        "z": "50f6fbc320dea49b",
        "name": "Conveyor Belt",
        "func": "let sensor_no = flow.get(\"sensor_no\") - 1\n\nmsg.topic = \"ns=2;s=_conveyor\"+sensor_no+\";datatype=Boolean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 260,
        "wires": [
            [
                "e47c3a2480ce57ac"
            ]
        ]
    },
    {
        "id": "9f155d12ee5daad4",
        "type": "delay",
        "z": "50f6fbc320dea49b",
        "name": "Await delivery of box",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3960,
        "y": 260,
        "wires": [
            [
                "a12d8400d795190a"
            ]
        ]
    },
    {
        "id": "0dc1dac0a4e819a5",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Start conveyor belt:4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor4;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 740,
        "wires": [
            [
                "0758a7f725d9d1bb"
            ]
        ]
    },
    {
        "id": "0758a7f725d9d1bb",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1880,
        "y": 740,
        "wires": [
            [
                "38ba31dbbe4b3730"
            ]
        ]
    },
    {
        "id": "45578ef0beb6ded3",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2500,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "38ba31dbbe4b3730",
        "type": "subflow:023d3c161439f2e9",
        "z": "50f6fbc320dea49b",
        "name": "Let box move and stop conveyor belt:4",
        "env": [
            {
                "name": "DELAY",
                "value": "2.6",
                "type": "str"
            }
        ],
        "x": 2190,
        "y": 740,
        "wires": [
            [
                "45578ef0beb6ded3"
            ]
        ]
    },
    {
        "id": "180c0fde980bafd8",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_conveyor4;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor4",
        "x": 590,
        "y": 1380,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "8a3d21f15207e729",
        "type": "OpcUa-Item",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "item": "ns=2;s=_Remover;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Remover",
        "x": 590,
        "y": 1660,
        "wires": [
            [
                "682355ac9bc88396"
            ]
        ]
    },
    {
        "id": "9981caba16606c21",
        "type": "change",
        "z": "50f6fbc320dea49b",
        "name": "Start Remover",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_Remover;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4080,
        "y": 620,
        "wires": [
            [
                "cce130b9f0a9021e"
            ]
        ]
    },
    {
        "id": "6f4a4161cc76445a",
        "type": "subflow:023d3c161439f2e9",
        "z": "50f6fbc320dea49b",
        "name": "Stop Remover after wait",
        "x": 4570,
        "y": 620,
        "wires": [
            [
                "1a67a98b4f038632"
            ]
        ]
    },
    {
        "id": "1a67a98b4f038632",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "OPC UA Client: Receiver",
        "x": 4830,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "cce130b9f0a9021e",
        "type": "OpcUa-Client",
        "z": "50f6fbc320dea49b",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "OPC UA Client: Receiver",
        "x": 4310,
        "y": 620,
        "wires": [
            [
                "6f4a4161cc76445a"
            ]
        ]
    },
    {
        "id": "d9acf19651088861",
        "type": "comment",
        "z": "50f6fbc320dea49b",
        "g": "e9cf96557e4dc034",
        "name": "Order Dashboard",
        "info": "The Order Dashboard was created for task 4 and allows to instruct the factory for a specific amount of palletizing boxes for each flavor.\n\nIt is not linked with the database and the Discord bot. It can be used for debugging.",
        "x": 2260,
        "y": 1380,
        "wires": []
    },
    {
        "id": "482dac863765cfcc",
        "type": "comment",
        "z": "50f6fbc320dea49b",
        "g": "cfaea44f96a90458",
        "name": "Initialization",
        "info": "Inject variables to Factory I/O upon connection",
        "x": 310,
        "y": 920,
        "wires": []
    },
    {
        "id": "48f8c779fa22efdf",
        "type": "comment",
        "z": "50f6fbc320dea49b",
        "name": "Buffer Node",
        "info": "The buffer node is used to trigger the complete node, which is used to move on to the next order after the completion of an order in the database",
        "x": 4450,
        "y": 420,
        "wires": []
    },
    {
        "id": "df2f1b827a0d1854",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://127.0.0.1:53880",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "917a6a0ec30b9da8",
        "type": "ui_group",
        "name": "Orders",
        "tab": "29b9ef0389b9af45",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e381f49380c717d",
        "type": "sqlitedb",
        "db": "repos\\SQLite\\TeamEanventive.db",
        "mode": "RWC"
    },
    {
        "id": "229fdb851d9f2429",
        "type": "ui_group",
        "name": "Make your order",
        "tab": "c1493d12ac90a6c5",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "29b9ef0389b9af45",
        "type": "ui_tab",
        "name": "Control panel",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c1493d12ac90a6c5",
        "type": "ui_tab",
        "name": "Order Panel",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]