[
    {
        "id": "e14103932ef35805",
        "type": "subflow",
        "name": "Deactivate Device",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "5c4b3a990fec5f20"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 80,
                "wires": [
                    {
                        "id": "cf41e3b742bf4ce6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DELAY",
                "type": "str",
                "value": "1"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "cf41e3b742bf4ce6",
        "type": "change",
        "z": "e14103932ef35805",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "5c4b3a990fec5f20",
        "type": "delay",
        "z": "e14103932ef35805",
        "name": "",
        "pauseType": "delay",
        "timeout": "${DELAY}",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "0",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "cf41e3b742bf4ce6"
            ]
        ]
    },
    {
        "id": "93b91e7b83d34ec8",
        "type": "tab",
        "label": "New Working Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6b9158c2e0dbe168",
        "type": "group",
        "z": "93b91e7b83d34ec8",
        "name": "Initialize variables on Factory I/O",
        "style": {
            "label": true
        },
        "nodes": [
            "f79036bea7bace3d",
            "ea2fa7435d15f3da",
            "735f52bc979cd1c0",
            "956de6361aa73400",
            "4bd8c67ad7a758a8",
            "d23f8aa2a389b783",
            "07707271b51ce70a",
            "cef37a2a93e1d5df",
            "96e166ad45dad93b",
            "4c8c21cc2a07f58d",
            "ebf6dc7f8c2f7b94",
            "9a4beeab257e624c",
            "538aa67683057ec7",
            "f9c4d436606b2e54",
            "3976dc32e4b0587a",
            "39ac19acef68737d",
            "4cf53e3e68033c95",
            "cec574f4fee88665"
        ],
        "x": 114,
        "y": 1119,
        "w": 912,
        "h": 1042
    },
    {
        "id": "7e6ca51db4dee75c",
        "type": "group",
        "z": "93b91e7b83d34ec8",
        "name": "Dashboard",
        "style": {
            "label": true
        },
        "nodes": [
            "756c6237db63a608",
            "847f12672776f231",
            "8cafda50ec105bda",
            "48a399b89911755d",
            "c23197fddf468f9f",
            "d1e8cc12e5838429",
            "048035e880a2548d",
            "e02c4997c7e0c99c",
            "5db32aa4ce958c04",
            "5744c6ac7b853d3b",
            "4e77aaef3b06537d",
            "75e3c6eacacd2701",
            "2094c1fb48aef917"
        ],
        "x": 1214,
        "y": 799,
        "w": 1312,
        "h": 482
    },
    {
        "id": "f79036bea7bace3d",
        "type": "OpcUa-Server",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "port": "53880",
        "name": "",
        "endpoint": "",
        "users": "users.json",
        "nodesetDir": "",
        "folderName4PKI": "",
        "autoAcceptUnknownCertificate": true,
        "registerToDiscovery": false,
        "constructDefaultAddressSpace": true,
        "allowAnonymous": true,
        "endpointNone": true,
        "endpointSign": true,
        "endpointSignEncrypt": true,
        "endpointBasic128Rsa15": true,
        "endpointBasic256": true,
        "endpointBasic256Sha256": true,
        "maxNodesPerBrowse": 0,
        "maxNodesPerHistoryReadData": 0,
        "maxNodesPerHistoryReadEvents": 0,
        "maxNodesPerHistoryUpdateData": 0,
        "maxNodesPerRead": 0,
        "maxNodesPerWrite": 0,
        "maxNodesPerMethodCall": 0,
        "maxNodesPerRegisterNodes": 0,
        "maxNodesPerNodeManagement": 0,
        "maxMonitoredItemsPerCall": 0,
        "maxNodesPerHistoryUpdateEvents": 0,
        "maxNodesPerTranslateBrowsePathsToNodeIds": 0,
        "maxConnectionsPerEndpoint": "60",
        "maxMessageSize": 4096,
        "maxBufferSize": 4096,
        "x": 920,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "ea2fa7435d15f3da",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_sensor0;datatype=Boolean",
        "datatype": "Boolean",
        "value": "0",
        "name": "_sensor0",
        "x": 560,
        "y": 1160,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "735f52bc979cd1c0",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_sensor1;datatype=Boolean",
        "datatype": "Boolean",
        "value": "0",
        "name": "_sensor1",
        "x": 560,
        "y": 1240,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "956de6361aa73400",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_sensor2;datatype=Boolean",
        "datatype": "Boolean",
        "value": "0",
        "name": "_sensor2",
        "x": 560,
        "y": 1340,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "4bd8c67ad7a758a8",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_conveyor0;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor0",
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "d23f8aa2a389b783",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_conveyor1;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor1",
        "x": 570,
        "y": 1480,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "07707271b51ce70a",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_conveyor2;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor2",
        "x": 570,
        "y": 1540,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "cef37a2a93e1d5df",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_conveyor3a;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor3a",
        "x": 570,
        "y": 1600,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "96e166ad45dad93b",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_conveyor3b;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor3b",
        "x": 570,
        "y": 1660,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "4c8c21cc2a07f58d",
        "type": "inject",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"opcuaCommand\":\"addVariable\"}",
        "payloadType": "json",
        "x": 210,
        "y": 1520,
        "wires": [
            [
                "ea2fa7435d15f3da",
                "735f52bc979cd1c0",
                "956de6361aa73400",
                "4bd8c67ad7a758a8",
                "d23f8aa2a389b783",
                "07707271b51ce70a",
                "cef37a2a93e1d5df",
                "96e166ad45dad93b",
                "ebf6dc7f8c2f7b94",
                "9a4beeab257e624c",
                "538aa67683057ec7",
                "f9c4d436606b2e54",
                "3976dc32e4b0587a",
                "39ac19acef68737d",
                "4cf53e3e68033c95",
                "cec574f4fee88665"
            ]
        ]
    },
    {
        "id": "2e773295b1718d1c",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Specify current sensor",
        "func": "let sensor_no = flow.get(\"sensor_no\")\n\nmsg.topic = \"ns=2;s=_sensor\"+ sensor_no +\";datatype=Boolean\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 420,
        "wires": [
            [
                "38912005aff121f1"
            ]
        ]
    },
    {
        "id": "38912005aff121f1",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2280,
        "y": 420,
        "wires": [
            [
                "e0ca9fd7b8912271"
            ]
        ]
    },
    {
        "id": "e0ca9fd7b8912271",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Track order status",
        "func": "let sensor_no = flow.get(\"sensor_no\")\nlet order_no = flow.get(\"orders\")\nlet complete_orders = flow.get(\"completed_orders\")\nlet prevSenReading = flow.get(\"previousSensorReading\")\nmsg.completeFlavor = \"false\";\nmsg.completeOrder = \"false\";\n\nif(msg.payload & !prevSenReading){\n    prevSenReading = true\n    complete_orders[sensor_no] += 1\n    flow.set(\"completed_orders\", complete_orders)\n} else{\n    prevSenReading = false\n}\n\nif(complete_orders[sensor_no] >= order_no[sensor_no]){\n        // Turn on conveyor here\n        msg.emit = \"false\"\n        sensor_no += 1\n        if(sensor_no >= order_no.length){\n            msg.completeOrder = \"true\";\n        }\n        flow.set(\"sensor_no\", sensor_no)\n        msg.completeFlavor = \"true\"\n}\nflow.set(\"previousSensorReading\", prevSenReading)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 420,
        "wires": [
            [
                "7eced069179bf381",
                "cfac178a817b306e",
                "f21dc222d7db06f9",
                "49f5e56bd98239c0"
            ]
        ]
    },
    {
        "id": "b90bcc86f1f788fb",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3500,
        "y": 420,
        "wires": [
            [
                "07869a1f8a466003"
            ]
        ]
    },
    {
        "id": "ebf6dc7f8c2f7b94",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_Emitter0;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter0",
        "x": 560,
        "y": 1760,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "9a4beeab257e624c",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_Emitter1;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter1",
        "x": 560,
        "y": 1820,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "538aa67683057ec7",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_Emitter2;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter2",
        "x": 560,
        "y": 1880,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "3a2b714f2782785a",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3920,
        "y": 420,
        "wires": [
            [
                "7ab0b573d1f61893"
            ]
        ]
    },
    {
        "id": "7eced069179bf381",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Check if a flavor is complete",
        "property": "completeFlavor",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2800,
        "y": 420,
        "wires": [
            [
                "cafa47db84cdfef6",
                "8318a4c89edc2195"
            ]
        ]
    },
    {
        "id": "b2fe36c6e7ef347d",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Start conveyor belt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor3a;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3310,
        "y": 420,
        "wires": [
            [
                "b90bcc86f1f788fb"
            ]
        ]
    },
    {
        "id": "cafa47db84cdfef6",
        "type": "delay",
        "z": "93b91e7b83d34ec8",
        "name": "Await delivery of box",
        "pauseType": "delay",
        "timeout": "1.65",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3080,
        "y": 420,
        "wires": [
            [
                "b2fe36c6e7ef347d"
            ]
        ]
    },
    {
        "id": "c9bc1272ffc7b663",
        "type": "trigger",
        "z": "93b91e7b83d34ec8",
        "name": "Polling loop",
        "op1": "",
        "op2": "",
        "op1type": "date",
        "op2type": "date",
        "duration": "-600",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1850,
        "y": 420,
        "wires": [
            [
                "2e773295b1718d1c",
                "b6bf53d341e369fa"
            ]
        ]
    },
    {
        "id": "cfac178a817b306e",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Check if order is complete",
        "property": "completeOrder",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2790,
        "y": 480,
        "wires": [
            [
                "1c0d5f1b9c2a8943"
            ]
        ]
    },
    {
        "id": "f95d9ab43c92638f",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Start second conveyor belt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor3b;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3280,
        "y": 480,
        "wires": [
            [
                "cb649f5b626c8d7f"
            ]
        ]
    },
    {
        "id": "1c0d5f1b9c2a8943",
        "type": "delay",
        "z": "93b91e7b83d34ec8",
        "name": "Await delivery of box",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3040,
        "y": 480,
        "wires": [
            [
                "f95d9ab43c92638f"
            ]
        ]
    },
    {
        "id": "cb649f5b626c8d7f",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3500,
        "y": 480,
        "wires": [
            [
                "e7af2f40fd8f1e09"
            ]
        ]
    },
    {
        "id": "b5802e61638a77f1",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "OPC UA Client: Conveyor 3b",
        "x": 4080,
        "y": 480,
        "wires": [
            [
                "539f82e4c5730487",
                "5ceca8112ec8b39e"
            ]
        ]
    },
    {
        "id": "8318a4c89edc2195",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Reset polling loop",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 200,
        "wires": [
            [
                "c9bc1272ffc7b663"
            ]
        ]
    },
    {
        "id": "7ab0b573d1f61893",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Restarts polling loop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 60,
        "wires": [
            [
                "c9bc1272ffc7b663"
            ]
        ]
    },
    {
        "id": "c77989a34147fcb5",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Initialize Variables",
        "func": "flow.set(\"sensor_no\",0)\nflow.set(\"completed_orders\", [0,0,0])\nflow.set(\"previousSensorReading\", false)\n\nmsg.payload = flow.get(\"completed_orders\")\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 420,
        "wires": [
            [
                "c9bc1272ffc7b663"
            ]
        ]
    },
    {
        "id": "f21dc222d7db06f9",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Check if all sensors polled",
        "property": "sensor_no",
        "propertyType": "flow",
        "rules": [
            {
                "t": "cont",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2790,
        "y": 360,
        "wires": [
            [
                "8318a4c89edc2195"
            ]
        ]
    },
    {
        "id": "f9c4d436606b2e54",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_Emitter3;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Emitter3",
        "x": 560,
        "y": 1940,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "0817cb56b889edb6",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Start conveyor belt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor3a;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 540,
        "wires": [
            [
                "61dbb1d652f449a5"
            ]
        ]
    },
    {
        "id": "61dbb1d652f449a5",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1880,
        "y": 540,
        "wires": [
            [
                "8bd3b4b163ed0fb3"
            ]
        ]
    },
    {
        "id": "f18e4946439165a5",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2500,
        "y": 540,
        "wires": [
            [
                "c77989a34147fcb5"
            ]
        ]
    },
    {
        "id": "4995f394c244eba8",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Emit new stackable box",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_Emitter3;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 620,
        "wires": [
            [
                "f2b6d9ea100f9df2"
            ]
        ]
    },
    {
        "id": "f2b6d9ea100f9df2",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1900,
        "y": 620,
        "wires": [
            [
                "bad12428b257a396"
            ]
        ]
    },
    {
        "id": "f57096fbe5f54131",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2480,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "bad12428b257a396",
        "type": "subflow:e14103932ef35805",
        "z": "93b91e7b83d34ec8",
        "name": "Stop emitting stackable boxes",
        "x": 2170,
        "y": 620,
        "wires": [
            [
                "f57096fbe5f54131"
            ]
        ]
    },
    {
        "id": "8bd3b4b163ed0fb3",
        "type": "subflow:e14103932ef35805",
        "z": "93b91e7b83d34ec8",
        "name": "Let box move and stop conveyor belt",
        "env": [
            {
                "name": "DELAY",
                "value": "3",
                "type": "str"
            }
        ],
        "x": 2190,
        "y": 540,
        "wires": [
            [
                "f18e4946439165a5"
            ]
        ]
    },
    {
        "id": "e7af2f40fd8f1e09",
        "type": "subflow:e14103932ef35805",
        "z": "93b91e7b83d34ec8",
        "name": "Stop second conveyor belt after wait",
        "env": [
            {
                "name": "DELAY",
                "value": "3",
                "type": "str"
            }
        ],
        "x": 3770,
        "y": 480,
        "wires": [
            [
                "b5802e61638a77f1"
            ]
        ]
    },
    {
        "id": "07869a1f8a466003",
        "type": "subflow:e14103932ef35805",
        "z": "93b91e7b83d34ec8",
        "name": "Stop conveyor belt",
        "env": [
            {
                "name": "DELAY",
                "value": "3.9",
                "type": "str"
            }
        ],
        "x": 3690,
        "y": 420,
        "wires": [
            [
                "3a2b714f2782785a"
            ]
        ]
    },
    {
        "id": "64f85a830107e77b",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Turn off Emitter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3520,
        "y": 200,
        "wires": [
            [
                "baaf6167bb939e45"
            ]
        ]
    },
    {
        "id": "baaf6167bb939e45",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3700,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "76ef324537d5863b",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Is emitting complete?",
        "property": "emit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3300,
        "y": 200,
        "wires": [
            [
                "64f85a830107e77b",
                "a5b3fc6e317b99a9"
            ]
        ]
    },
    {
        "id": "486bae5c26d11e64",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3160,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "974e1a228d062075",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Check if emitting is needed",
        "property": "emit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2700,
        "y": 60,
        "wires": [
            [
                "4ddd1dfc08ee0d97",
                "23aab02d0f1d23a1"
            ]
        ]
    },
    {
        "id": "b6bf53d341e369fa",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Track emission",
        "func": "let orders = flow.get(\"orders\")\nlet completed_orders = flow.get(\"completed_orders\")\nlet sensor_no = flow.get(\"sensor_no\")\nmsg.topic = \"ns=2;s=_Emitter\"+sensor_no+\";datatype=Boolean\"\nif(completed_orders[sensor_no] < orders[sensor_no]){\n    msg.emit = \"true\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2460,
        "y": 60,
        "wires": [
            [
                "974e1a228d062075"
            ]
        ]
    },
    {
        "id": "49f5e56bd98239c0",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Get current emitter",
        "func": "let sensor_no = flow.get(\"sensor_no\") - 1\n\nmsg.topic = \"ns=2;s=_Emitter\"+sensor_no+\";datatype=Boolean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3090,
        "y": 200,
        "wires": [
            [
                "76ef324537d5863b"
            ]
        ]
    },
    {
        "id": "4ddd1dfc08ee0d97",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Turn on Emitter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2960,
        "y": 60,
        "wires": [
            [
                "486bae5c26d11e64"
            ]
        ]
    },
    {
        "id": "214a5d158f9263cd",
        "type": "ui_button",
        "z": "93b91e7b83d34ec8",
        "name": "Start Button",
        "group": "3897f66d16c0d179",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "1ed0e6d6adc34f07"
            ]
        ]
    },
    {
        "id": "1ed0e6d6adc34f07",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Query pending orders",
        "func": "msg.topic=`SELECT m.order_id, item_name, quantity FROM \n            MENU_ORDER m INNER JOIN ORDER_ITEM i ON m.order_id = i.order_id\n            WHERE order_status=\"Order successful\" ORDER BY m.date`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 380,
        "wires": [
            [
                "397d66eb9ec66923"
            ]
        ]
    },
    {
        "id": "397d66eb9ec66923",
        "type": "sqlite",
        "z": "93b91e7b83d34ec8",
        "mydb": "9e381f49380c717d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 480,
        "y": 460,
        "wires": [
            [
                "80743ed906ee48db"
            ]
        ]
    },
    {
        "id": "80743ed906ee48db",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Identify current order",
        "func": "const groupByKey = (list, key) => list.reduce((hash, obj) => ({...hash, [obj[key]]:( hash[obj[key]] || [] ).concat(obj)}), {})\n\nconst results = groupByKey(msg.payload, 'order_id'),\n      keys = Object.keys(results)\n      \nmsg.order_made = \"true\"\n\nif (keys.length === 0){\n    msg.order_made = \"false\"\n    msg.payload=\"No orders remaining\"\n    return msg;\n}\n   \nconst order_id = keys[0],\n      current_order = results[keys[0]]\n        \nlet item, quantity;\nlet order_array = [0,0,0]\n\nfor (let i=0; i<current_order.length; i++){\n    item = current_order[i].item_name,\n    quantity = current_order[i].quantity\n    setOrder(item, quantity)\n}\nflow.set(\"orders\", order_array)\n\n\nfunction setOrder(itemName, quantity){\n    let index;\n    if (itemName === \"WhiteLotus\"){\n        index = 0\n    } else if (itemName === \"RedBean\"){\n        index = 1\n    } else if (itemName === \"GreenTea\"){\n        index = 2\n    } else {\n        throw new Error(\"Unrecognized order\")\n    }\n    order_array[index] = Math.ceil(quantity/5)\n}\n\nmsg.topic = `UPDATE MENU_ORDER SET order_status=\"Making mooncakes\"\n             WHERE order_id=${order_id}`\nmsg.payload = \"Making mooncakes\"\nflow.set(\"order_id\", order_id)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 460,
        "wires": [
            [
                "f254a069b803fa1b",
                "fd31ef7f545e73da",
                "e33b0ed54916db3f"
            ]
        ]
    },
    {
        "id": "99564af6a398bec1",
        "type": "ui_button",
        "z": "93b91e7b83d34ec8",
        "name": "Stop Button",
        "group": "3897f66d16c0d179",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 570,
        "y": 560,
        "wires": [
            [
                "96d0352c66d5b55b"
            ]
        ]
    },
    {
        "id": "e33b0ed54916db3f",
        "type": "ui_text",
        "z": "93b91e7b83d34ec8",
        "group": "3897f66d16c0d179",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status indicator",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 560,
        "wires": []
    },
    {
        "id": "5baed6361cd6d4d0",
        "type": "complete",
        "z": "93b91e7b83d34ec8",
        "name": "Trigger if an order is complete",
        "scope": [
            "539f82e4c5730487"
        ],
        "uncaught": false,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "ff68626c1bfbafd5"
            ]
        ]
    },
    {
        "id": "96d0352c66d5b55b",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Reset state",
        "func": "msg.invalid_reset = \"false\"\n\nlet order_id = flow.get(\"order_id\")\nif (order_id === undefined){\n    msg.invalid_reset = \"true\"\n    msg.payload = \"\"\n    return msg;\n} \n\nmsg.payload = \"Order paused\"\nflow.set(\"orders\", [0,0,0])\n\nmsg.topic = `UPDATE MENU_ORDER SET order_status=\"Order successful\"\n             WHERE order_id=${order_id}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 560,
        "wires": [
            [
                "e33b0ed54916db3f",
                "47145b79bec89d56"
            ]
        ]
    },
    {
        "id": "756c6237db63a608",
        "type": "ui_numeric",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "White Lotus Picker",
        "label": "White Lotus ",
        "tooltip": "",
        "group": "998ff9fce76a320e",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 2110,
        "y": 900,
        "wires": [
            [
                "48a399b89911755d"
            ]
        ]
    },
    {
        "id": "847f12672776f231",
        "type": "ui_numeric",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Red Bean Picker",
        "label": "Red Bean",
        "tooltip": "",
        "group": "998ff9fce76a320e",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 2110,
        "y": 960,
        "wires": [
            [
                "c23197fddf468f9f"
            ]
        ]
    },
    {
        "id": "8cafda50ec105bda",
        "type": "ui_numeric",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Green Tea Picker",
        "label": "Green Tea",
        "tooltip": "",
        "group": "998ff9fce76a320e",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": false,
        "topic": "payload",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "3",
        "step": 1,
        "className": "",
        "x": 2110,
        "y": 1020,
        "wires": [
            [
                "d1e8cc12e5838429"
            ]
        ]
    },
    {
        "id": "48a399b89911755d",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Set White Lotus Amount",
        "func": "let orders = flow.get(\"orders\")\nif(orders === undefined){\n    orders = [0,0,0]\n}\n\norders[0] = msg.payload\nflow.set(\"orders\", orders)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2390,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "c23197fddf468f9f",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Set Red Bean Amount",
        "func": "let orders = flow.get(\"orders\")\nif(orders === undefined){\n    orders = [0,0,0]\n}\norders[1] = msg.payload\nflow.set(\"orders\", orders)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "d1e8cc12e5838429",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Set Green Tea Amount",
        "func": "let orders = flow.get(\"orders\")\nif(orders === undefined){\n    orders = [0,0,0]\n}\norders[2] = msg.payload\nflow.set(\"orders\", orders)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "048035e880a2548d",
        "type": "ui_button",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "",
        "group": "998ff9fce76a320e",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1300,
        "y": 840,
        "wires": [
            [
                "e02c4997c7e0c99c",
                "75e3c6eacacd2701",
                "0817cb56b889edb6",
                "4995f394c244eba8",
                "9e8a61fee11b4460"
            ]
        ]
    },
    {
        "id": "e02c4997c7e0c99c",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Disable input upon accepting order",
        "func": "msg.enabled = false;\ndelete msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 840,
        "wires": [
            [
                "756c6237db63a608",
                "847f12672776f231",
                "8cafda50ec105bda",
                "048035e880a2548d"
            ]
        ]
    },
    {
        "id": "5db32aa4ce958c04",
        "type": "ui_button",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "",
        "group": "998ff9fce76a320e",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1290,
        "y": 1180,
        "wires": [
            [
                "5744c6ac7b853d3b",
                "2094c1fb48aef917"
            ]
        ]
    },
    {
        "id": "5744c6ac7b853d3b",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Enable input upon reset",
        "func": "msg.enabled = true;\nmsg.payload = \"\"\nflow.set(\"orders\",[0,0,0]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1180,
        "wires": [
            [
                "847f12672776f231",
                "756c6237db63a608",
                "8cafda50ec105bda",
                "048035e880a2548d"
            ]
        ]
    },
    {
        "id": "4e77aaef3b06537d",
        "type": "ui_text",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "group": "998ff9fce76a320e",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Status Indicator",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2100,
        "y": 1080,
        "wires": []
    },
    {
        "id": "75e3c6eacacd2701",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "Notify Order success",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Order is successful",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 920,
        "wires": [
            [
                "4e77aaef3b06537d"
            ]
        ]
    },
    {
        "id": "2094c1fb48aef917",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "g": "7e6ca51db4dee75c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 1240,
        "wires": [
            [
                "4e77aaef3b06537d"
            ]
        ]
    },
    {
        "id": "f254a069b803fa1b",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Proceed only if there are orders",
        "property": "order_made",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1170,
        "y": 460,
        "wires": [
            [
                "0817cb56b889edb6",
                "4995f394c244eba8",
                "9e8a61fee11b4460"
            ]
        ]
    },
    {
        "id": "fd31ef7f545e73da",
        "type": "sqlite",
        "z": "93b91e7b83d34ec8",
        "mydb": "9e381f49380c717d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 860,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "408adcb5fd0814ed",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Notify database of completion",
        "func": "let order_id = flow.get(\"order_id\")\n\nif (order_id === undefined){\n    msg.error = \"order_id not set\"\n    return msg;\n}\n\nmsg.topic = `UPDATE MENU_ORDER SET order_status=\"Order completed\"\n             WHERE order_id=${order_id}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 300,
        "wires": [
            [
                "fd31ef7f545e73da"
            ]
        ]
    },
    {
        "id": "47145b79bec89d56",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Check if stop was valid",
        "property": "invalid_reset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 920,
        "y": 640,
        "wires": [
            [
                "f8a09bfb459322a5"
            ]
        ]
    },
    {
        "id": "f8a09bfb459322a5",
        "type": "sqlite",
        "z": "93b91e7b83d34ec8",
        "mydb": "9e381f49380c717d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1240,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "539f82e4c5730487",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Buffer node",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4310,
        "y": 480,
        "wires": [
            [
                "8318a4c89edc2195"
            ]
        ]
    },
    {
        "id": "c67dc711a3d7c1e4",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Check if order has been stopped",
        "func": "const orders = flow.get(\"orders\")\n\nmsg.stopped=\"false\"\nif (orders.toString() === [0,0,0].toString()){\n    msg.stopped = \"true\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 220,
        "wires": [
            [
                "214173d910c7582a"
            ]
        ]
    },
    {
        "id": "214173d910c7582a",
        "type": "switch",
        "z": "93b91e7b83d34ec8",
        "name": "Proceed only if not stopped",
        "property": "stopped",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 180,
        "y": 300,
        "wires": [
            [
                "1ed0e6d6adc34f07",
                "408adcb5fd0814ed"
            ]
        ]
    },
    {
        "id": "55336107df720f43",
        "type": "trigger",
        "z": "93b91e7b83d34ec8",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "-250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 120,
        "y": 740,
        "wires": [
            [
                "84fde3e3bcdc6046",
                "d2d8586c9f9df375"
            ]
        ]
    },
    {
        "id": "3976dc32e4b0587a",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_start_btn;datatype=Boolean",
        "datatype": "Boolean",
        "value": "",
        "name": "_start_btn",
        "x": 560,
        "y": 2060,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "39ac19acef68737d",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_stop_btn;datatype=Boolean",
        "datatype": "Boolean",
        "value": "",
        "name": "_stop_btn",
        "x": 560,
        "y": 2120,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "98a47e46d3f80df4",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 480,
        "y": 700,
        "wires": [
            [
                "1ed0e6d6adc34f07",
                "bfb20c2153f091f9"
            ]
        ]
    },
    {
        "id": "84fde3e3bcdc6046",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Start ",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_start_btn;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 700,
        "wires": [
            [
                "98a47e46d3f80df4"
            ]
        ]
    },
    {
        "id": "d2d8586c9f9df375",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Stop",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_stop_btn;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "0d91a9c9ce08adc2"
            ]
        ]
    },
    {
        "id": "0d91a9c9ce08adc2",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 480,
        "y": 780,
        "wires": [
            [
                "96d0352c66d5b55b",
                "8a8fd38185c71b2f"
            ]
        ]
    },
    {
        "id": "bfb20c2153f091f9",
        "type": "debug",
        "z": "93b91e7b83d34ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 700,
        "wires": []
    },
    {
        "id": "ff68626c1bfbafd5",
        "type": "delay",
        "z": "93b91e7b83d34ec8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "c67dc711a3d7c1e4"
            ]
        ]
    },
    {
        "id": "8a8fd38185c71b2f",
        "type": "debug",
        "z": "93b91e7b83d34ec8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 780,
        "wires": []
    },
    {
        "id": "db3f083d602735aa",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 3360,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4293782b366cc8ae",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Turn on Conveyor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3170,
        "y": 120,
        "wires": [
            [
                "db3f083d602735aa"
            ]
        ]
    },
    {
        "id": "23aab02d0f1d23a1",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Conveyor Belt",
        "func": "let sensor_no = flow.get(\"sensor_no\")\n\nmsg.topic = \"ns=2;s=_conveyor\"+sensor_no+\";datatype=Boolean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2960,
        "y": 120,
        "wires": [
            [
                "4293782b366cc8ae"
            ]
        ]
    },
    {
        "id": "db9ef51832d87e3d",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 4160,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "42e986e1e36234f4",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Turn off Conveyor",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 260,
        "wires": [
            [
                "582ce641a7c386cd"
            ]
        ]
    },
    {
        "id": "a5b3fc6e317b99a9",
        "type": "function",
        "z": "93b91e7b83d34ec8",
        "name": "Conveyor Belt",
        "func": "let sensor_no = flow.get(\"sensor_no\") - 1\n\nmsg.topic = \"ns=2;s=_conveyor\"+sensor_no+\";datatype=Boolean\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 260,
        "wires": [
            [
                "42e986e1e36234f4"
            ]
        ]
    },
    {
        "id": "582ce641a7c386cd",
        "type": "delay",
        "z": "93b91e7b83d34ec8",
        "name": "Await delivery of box",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3960,
        "y": 260,
        "wires": [
            [
                "db9ef51832d87e3d"
            ]
        ]
    },
    {
        "id": "9e8a61fee11b4460",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "Start conveyor belt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_conveyor4;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 700,
        "wires": [
            [
                "45afad0d08ba5827"
            ]
        ]
    },
    {
        "id": "45afad0d08ba5827",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 1880,
        "y": 700,
        "wires": [
            [
                "20c3d51042b19f4d"
            ]
        ]
    },
    {
        "id": "dd42695767f4e9cd",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 2500,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "20c3d51042b19f4d",
        "type": "subflow:e14103932ef35805",
        "z": "93b91e7b83d34ec8",
        "name": "Let box move and stop conveyor belt",
        "env": [
            {
                "name": "DELAY",
                "value": "2.6",
                "type": "str"
            }
        ],
        "x": 2190,
        "y": 700,
        "wires": [
            [
                "dd42695767f4e9cd"
            ]
        ]
    },
    {
        "id": "4cf53e3e68033c95",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_conveyor4;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "",
        "name": "_conveyor4",
        "x": 570,
        "y": 1720,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "cec574f4fee88665",
        "type": "OpcUa-Item",
        "z": "93b91e7b83d34ec8",
        "g": "6b9158c2e0dbe168",
        "item": "ns=2;s=_Remover;datatype=Boolean;value=false",
        "datatype": "Boolean",
        "value": "0",
        "name": "_Remover",
        "x": 570,
        "y": 2000,
        "wires": [
            [
                "f79036bea7bace3d"
            ]
        ]
    },
    {
        "id": "5ceca8112ec8b39e",
        "type": "change",
        "z": "93b91e7b83d34ec8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=2;s=_Remover;datatype=Boolean",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4120,
        "y": 620,
        "wires": [
            [
                "1ac2631fdf739bf8"
            ]
        ]
    },
    {
        "id": "379fd99121a4bc03",
        "type": "subflow:e14103932ef35805",
        "z": "93b91e7b83d34ec8",
        "name": "Stop Receiver after wait",
        "x": 4570,
        "y": 620,
        "wires": [
            [
                "2a6035cbce0c0d38"
            ]
        ]
    },
    {
        "id": "2a6035cbce0c0d38",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "OPC UA Client: Receiver",
        "x": 4810,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "1ac2631fdf739bf8",
        "type": "OpcUa-Client",
        "z": "93b91e7b83d34ec8",
        "endpoint": "df2f1b827a0d1854",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "OPC UA Client: Receiver",
        "x": 4330,
        "y": 620,
        "wires": [
            [
                "379fd99121a4bc03"
            ]
        ]
    },
    {
        "id": "df2f1b827a0d1854",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://127.0.0.1:53880",
        "secpol": "None",
        "secmode": "None",
        "none": false,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "3897f66d16c0d179",
        "type": "ui_group",
        "name": "Orders",
        "tab": "e759659bf60f5d08",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e381f49380c717d",
        "type": "sqlitedb",
        "db": "Documents\\TeamEanventiveDB\\TeamEanventive.db",
        "mode": "RWC"
    },
    {
        "id": "998ff9fce76a320e",
        "type": "ui_group",
        "name": "Make your order",
        "tab": "e6ccdee7a87211a8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e759659bf60f5d08",
        "type": "ui_tab",
        "name": "Control panel",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e6ccdee7a87211a8",
        "type": "ui_tab",
        "name": "Order Panel",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]